# Stage 1: Get RKNN source（缓存 RKNN 源码获取）
FROM ubuntu:22.04

ARG RKNN_VERSION=2.3.2
ARG DEBIAN_FRONTEND=noninteractive
ENV RKNN_VERSION=${RKNN_VERSION}

RUN apt update && apt install -y git && \
    rm -rf /var/lib/apt/lists/*
RUN git clone --depth 1 -b v${RKNN_VERSION} https://github.com/airockchip/rknn-toolkit2.git /rknn-toolkit2

RUN apt update -y && apt install -y \
    libxext6 \
    libopencv-dev \
    uvicorn \
    python3-pip \
    git \
    libgdal-dev \
    cmake && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*

COPY /rknn-toolkit2/rknn_toolkit_lite2/packages/rknn_toolkit_lite2-${RKNN_VERSION}-cp310-cp310-linux_aarch64.whl /tmp/

RUN pip install -U pip setuptools wheel poetry && \
    poetry config virtualenvs.create false

WORKDIR /tmp

COPY pyproject.toml poetry.lock ./

RUN poetry install --no-root && \
    pip install /tmp/rknn_toolkit_lite2-${RKNN_VERSION}-cp310-cp310-linux_aarch64.whl

COPY coral_inference /tmp/coral_inference

RUN poetry build && \
    pip install dist/*.whl

RUN ldconfig

WORKDIR /app

COPY docker/config /app/

RUN chmod +x ./entrypoint.sh

# Environment variables
ENV VERSION_CHECK_MODE=continuous \
    PROJECT=coral-platform \
    NUM_WORKERS=1 \
    HOST=0.0.0.0 \
    PORT=9001 \
    WORKFLOWS_STEP_EXECUTION_MODE=local \
    WORKFLOWS_MAX_CONCURRENT_STEPS=4 \
    API_LOGGING_ENABLED=True \
    CORE_MODEL_SAM2_ENABLED=False \
    CORE_MODEL_OWLV2_ENABLED=False \
    ENABLE_STREAM_API=True \
    ENABLE_WORKFLOWS_PROFILING=True \
    ENABLE_PROMETHEUS=True \
    CURRENT_INFERENCE_PLATFORM=rknn

ENTRYPOINT ["./entrypoint.sh"]