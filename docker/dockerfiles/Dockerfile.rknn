# Stage 1: Get RKNN source
FROM ubuntu:22.04 AS source

ARG RKNN_VERSION=1.6.0
ENV RKNN_VERSION=${RKNN_VERSION}

RUN apt update && apt install -y git && \
    git clone --depth 1 -b v${RKNN_VERSION} https://github.com/airockchip/rknn-toolkit2.git /rknn-toolkit2

# Stage 2: Build and install dependencies
FROM ubuntu:22.04 AS builder

ARG DEBIAN_FRONTEND=noninteractive
ARG RKNN_VERSION=1.6.0
ENV RKNN_VERSION=${RKNN_VERSION}

RUN apt update -y && apt install -y \
    libxext6 \
    libopencv-dev \
    uvicorn \
    python3-pip \
    git \
    libgdal-dev \
    cmake && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*

RUN pip install --no-cache-dir -U pip setuptools wheel poetry && \
    poetry config virtualenvs.create false

WORKDIR /tmp
COPY pyproject.toml poetry.lock ./
RUN mkdir -p /tmp/coral_inference
COPY coral_inference/* /tmp/coral_inference

# Copy RKNN files from source stage
COPY --from=source /rknn-toolkit2/rknn_toolkit_lite2/packages/rknn_toolkit_lite2-${RKNN_VERSION}-cp310-cp310-linux_aarch64.whl /tmp/

# Install all dependencies
RUN poetry install && \
    pip install --no-cache-dir /tmp/rknn_toolkit_lite2-${RKNN_VERSION}-cp310-cp310-linux_aarch64.whl

# Stage 3: Runtime
FROM ubuntu:22.04 AS runtime

ARG DEBIAN_FRONTEND=noninteractive
ARG RKNN_VERSION=1.6.0
ENV RKNN_VERSION=${RKNN_VERSION}

# Install only required runtime dependencies
RUN apt update -y && apt install -y \
    libxext6 \
    libopencv-dev \
    libgdal-dev && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*

# Copy RKNN runtime files
COPY --from=source /rknn-toolkit2/rknpu2/runtime/Linux/librknn_api/include/* /usr/include/
COPY --from=source /rknn-toolkit2/rknpu2/runtime/Linux/librknn_api/aarch64/librknnrt.so /usr/lib/

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.10/dist-packages/ /usr/local/lib/python3.10/dist-packages/
COPY --from=builder /usr/local/bin/ /usr/local/bin/

RUN ldconfig

WORKDIR /workspace
COPY docker/config/* /workspace/

ENV VERSION_CHECK_MODE=continuous \
    PROJECT=roboflow-platform \
    NUM_WORKERS=1 \
    HOST=0.0.0.0 \
    PORT=9001 \
    WORKFLOWS_STEP_EXECUTION_MODE=local \
    WORKFLOWS_MAX_CONCURRENT_STEPS=4 \
    API_LOGGING_ENABLED=True \
    CORE_MODEL_SAM2_ENABLED=False \
    CORE_MODEL_OWLV2_ENABLED=False \
    ENABLE_STREAM_API=True \
    ENABLE_WORKFLOWS_PROFILING=True \
    ENABLE_PROMETHEUS=True \
    CURRENT_INFERENCE_PLATFORM=rknn

ENTRYPOINT uvicorn web:app --workers $NUM_WORKERS --host $HOST --port $PORT