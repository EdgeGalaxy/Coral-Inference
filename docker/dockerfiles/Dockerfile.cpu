# First stage: Install all dependencies
FROM python:3.10 AS builder

ARG DEBIAN_FRONTEND=noninteractive

# 缓存层1: 安装系统依赖（很少变化）
RUN apt-get update -y \
    && apt-get install -y \
        libxext6 \
        libopencv-dev \
        uvicorn \
        python3-pip \
        git \
        libgdal-dev \
        cmake \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 缓存层2: 安装Python构建工具（很少变化）
RUN pip install --no-cache-dir -U pip setuptools wheel poetry \
    && poetry config virtualenvs.create false

WORKDIR /tmp

# 缓存层3: 复制依赖文件（偶尔变化）
COPY pyproject.toml poetry.lock ./

# 缓存层4: 安装Python依赖（依赖文件变化时重新构建）
RUN poetry install --no-root \
    && pip install --no-cache-dir uvicorn

# 缓存层5: 复制源代码（经常变化）
COPY coral_inference /tmp/coral_inference

# 缓存层6: 构建应用（代码变化时重新构建）
RUN poetry build && \
    pip install --no-cache-dir dist/*.whl

# Second stage: Runtime
FROM python:3.10-slim AS runtime

ARG DEBIAN_FRONTEND=noninteractive

# 缓存层1: 安装运行时系统依赖（很少变化）
RUN apt-get update -y \
    && apt-get install -y \
        libxext6 \
        libopencv-dev \
        libgdal-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 缓存层2: 复制Python环境（从builder阶段）
COPY --from=builder /usr/local/lib/python3.10/site-packages/ /usr/local/lib/python3.10/site-packages/
COPY --from=builder /usr/local/bin/ /usr/local/bin/

# 缓存层3: 创建用户（很少变化）
RUN groupadd -r coral && useradd -r -g coral coral

WORKDIR /workspace

# 缓存层4: 复制配置文件（偶尔变化）
COPY docker/config /workspace/

# 缓存层5: 设置权限（配置文件变化时重新构建）
RUN chown -R coral:coral /workspace && \
    chmod +x ./entrypoint.sh

# Environment variables
ENV VERSION_CHECK_MODE=continuous \
    PROJECT=coral-platform \
    NUM_WORKERS=1 \
    HOST=0.0.0.0 \
    PORT=9001 \
    WORKFLOWS_STEP_EXECUTION_MODE=local \
    WORKFLOWS_MAX_CONCURRENT_STEPS=4 \
    API_LOGGING_ENABLED=True \
    CORE_MODEL_SAM2_ENABLED=False \
    CORE_MODEL_OWLV2_ENABLED=False \
    ENABLE_STREAM_API=True \
    ENABLE_WORKFLOWS_PROFILING=True \
    ENABLE_PROMETHEUS=True \
    METRICS_ENABLED=False \
    CURRENT_INFERENCE_PLATFORM=onnx

# Switch to non-root user
USER coral

ENTRYPOINT ["./entrypoint.sh"]