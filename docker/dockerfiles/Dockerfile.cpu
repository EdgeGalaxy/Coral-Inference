# First stage: Install all dependencies
FROM python:3.9 as builder

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update -y \
    && apt-get install -y \
        libxext6 \
        libopencv-dev \
        uvicorn \
        python3-pip \
        git \
        libgdal-dev \
        cmake \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN pip install --no-cache-dir -U pip setuptools wheel poetry \
    && poetry config virtualenvs.create false

WORKDIR /tmp
COPY pyproject.toml poetry.lock ./

# Install all dependencies using poetry
RUN poetry install \
    && pip install --no-cache-dir uvicorn

RUN mkdir -p /tmp/coral_inference
COPY coral_inference/* /tmp/coral_inference
RUN poetry build && \
    pip install --no-cache-dir dist/*.whl

# Second stage: Runtime
FROM python:3.9-slim as runtime

ARG DEBIAN_FRONTEND=noninteractive

# Install only required runtime system libraries
RUN apt-get update -y \
    && apt-get install -y \
        libxext6 \
        libopencv-dev \
        libgdal-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder stage
COPY --from=builder /usr/local/lib/python3.9/site-packages/ /usr/local/lib/python3.9/site-packages/
COPY --from=builder /usr/local/bin/ /usr/local/bin/

WORKDIR /workspace
COPY docker/config/* /workspace/

# Environment variables
ENV VERSION_CHECK_MODE=continuous \
    PROJECT=roboflow-platform \
    NUM_WORKERS=1 \
    HOST=0.0.0.0 \
    PORT=9001 \
    WORKFLOWS_STEP_EXECUTION_MODE=local \
    WORKFLOWS_MAX_CONCURRENT_STEPS=4 \
    API_LOGGING_ENABLED=True \
    CORE_MODEL_SAM2_ENABLED=False \
    CORE_MODEL_OWLV2_ENABLED=False \
    ENABLE_STREAM_API=True \
    ENABLE_WORKFLOWS_PROFILING=True \
    ENABLE_PROMETHEUS=True \
    METRICS_ENABLED=False \
    CURRENT_INFERENCE_PLATFORM=onnx

ENTRYPOINT uvicorn web:app --workers $NUM_WORKERS --host $HOST --port $PORT