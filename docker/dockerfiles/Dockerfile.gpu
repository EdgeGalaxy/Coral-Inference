# Stage 1: Builder
FROM nvcr.io/nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04 as builder

WORKDIR /app

RUN apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    libxext6 \
    libopencv-dev \
    uvicorn \
    python3-pip \
    git \
    libgdal-dev \
    wget \
    && rm -rf /var/lib/apt/lists/*

RUN ln -s /usr/bin/python3 /usr/bin/python

RUN pip install --no-cache-dir -U pip setuptools wheel poetry \
    && poetry config virtualenvs.create false

WORKDIR /tmp
COPY pyproject.toml poetry.lock ./

# Install all dependencies including GPU packages
RUN poetry install --with gpu --no-root

COPY coral_inference /tmp/coral_inference
RUN poetry build && \
    pip install --no-cache-dir dist/*.whl

# Stage 2: Runtime
FROM nvcr.io/nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04 as runtime

RUN apt-get update -y && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    libxext6 \
    libopencv-dev \
    libgdal-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.10/dist-packages/ /usr/local/lib/python3.10/dist-packages/
COPY --from=builder /usr/local/bin/ /usr/local/bin/

WORKDIR /workspace
COPY docker/config /workspace/

ENV VERSION_CHECK_MODE=continuous \
    PROJECT=roboflow-platform \
    NUM_WORKERS=1 \
    HOST=0.0.0.0 \
    PORT=9001 \
    WORKFLOWS_STEP_EXECUTION_MODE=local \
    WORKFLOWS_MAX_CONCURRENT_STEPS=4 \
    API_LOGGING_ENABLED=True \
    LMM_ENABLED=False \
    CORE_MODEL_SAM2_ENABLED=False \
    CORE_MODEL_OWLV2_ENABLED=False \
    ENABLE_STREAM_API=True \
    ENABLE_WORKFLOWS_PROFILING=True \
    ENABLE_PROMETHEUS=True \
    CURRENT_INFERENCE_PLATFORM=onnx


RUN chmod +x ./entrypoint.sh
ENTRYPOINT ["./entrypoint.sh"]